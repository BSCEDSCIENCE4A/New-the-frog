{"ast":null,"code":"import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport createLogger from 'redux-logger';\nimport reduxReset from 'redux-reset';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport rootReducer from '../reducer/combine_reducer'; // import config from \"./config\";\n\nconst history = createBrowserHistory();\nconst enhancers = [];\nconst middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === \"development\") {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f;\n  middleware.push(createLogger);\n\n  if (typeof devToolsExtension === \"function\") {//   enhancers.push(devToolsExtension);\n  }\n}\n\nconst reduxComposer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst composeEnhancers = reduxComposer(applyMiddleware(...middleware), reduxReset(), ...enhancers);\nconst store = createStore(rootReducer(history), composeEnhancers);\nexport { store, history };","map":{"version":3,"sources":["C:/Users/Em/Desktop/New-the-frog/src/config/store.js"],"names":["applyMiddleware","compose","createStore","thunk","createLogger","reduxReset","routerMiddleware","createBrowserHistory","rootReducer","history","enhancers","middleware","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","f","push","reduxComposer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancers","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,OAAOC,WAAP,MAAwB,4BAAxB,C,CACA;;AAEA,MAAMC,OAAO,GAAGF,oBAAoB,EAApC;AACA,MAAMG,SAAS,GAAG,EAAlB;AAEA,MAAMC,UAAU,GAAG,CAACR,KAAD,EAAQG,gBAAgB,CAACG,OAAD,CAAxB,CAAnB;;AAEA,IAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,QAAMC,iBAAiB,GAAGC,MAAM,CAACC,4BAAP,GAAsCD,MAAM,CAACC,4BAAP,EAAtC,GAA8EC,CAAC,IAAIA,CAA7G;AACAP,EAAAA,UAAU,CAACQ,IAAX,CAAgBf,YAAhB;;AACA,MAAI,OAAOW,iBAAP,KAA6B,UAAjC,EAA6C,CAC7C;AACC;AACJ;;AAED,MAAMK,aAAa,GAAGJ,MAAM,CAACK,oCAAP,IAA+CpB,OAArE;AAEA,MAAMqB,gBAAgB,GAAGF,aAAa,CAClCpB,eAAe,CAAC,GAAGW,UAAJ,CADmB,EAElCN,UAAU,EAFwB,EAGlC,GAAGK,SAH+B,CAAtC;AAMA,MAAMa,KAAK,GAAGrB,WAAW,CAACM,WAAW,CAACC,OAAD,CAAZ,EAAuBa,gBAAvB,CAAzB;AAEA,SAASC,KAAT,EAAgBd,OAAhB","sourcesContent":["import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport createLogger from 'redux-logger';\nimport reduxReset from 'redux-reset';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport rootReducer from '../reducer/combine_reducer';\n// import config from \"./config\";\n\nconst history = createBrowserHistory();\nconst enhancers = [];\n\nconst middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === \"development\") {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f;\n    middleware.push(createLogger);\n    if (typeof devToolsExtension === \"function\") {\n    //   enhancers.push(devToolsExtension);\n    }\n}\n\nconst reduxComposer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst composeEnhancers = reduxComposer(\n    applyMiddleware(...middleware),\n    reduxReset(),\n    ...enhancers\n);\n\nconst store = createStore(rootReducer(history), composeEnhancers);\n\nexport { store, history };"]},"metadata":{},"sourceType":"module"}
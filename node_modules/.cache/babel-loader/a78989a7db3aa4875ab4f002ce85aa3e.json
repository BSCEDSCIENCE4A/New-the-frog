{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Em\\\\Desktop\\\\THe Frog v3\\\\src\\\\pages\\\\Assesment.js\";\nimport React from 'react';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { Button, Card, Grid, IconButton, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nconst classes = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minWidth: '100vw',\n    minHeight: '100vh',\n    backgroundColor: '#3f3f3f'\n  },\n  myCard: {\n    minWidth: '60vw',\n    minHeight: '60vh',\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n\n    /* backgroundImage:`url(${images})`,\r\n     backgroundSize: 'cover',*/\n    padding: 3,\n    background: \"radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(66,181,129,1) 100%)\"\n  },\n  myQuestion: {\n    padding: 2,\n    minWidth: '50vw',\n    minHeight: '15vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: \"radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(66,181,129,1) 100%)\"\n  },\n  myLabels: {\n    fontSize: '2rem',\n    textAlign: 'center',\n    fontFamily: 'Varela Round',\n    color: 'black'\n  },\n  myText: {\n    fontSize: '1.2rem',\n    opacity: '0.8',\n    textAlign: 'center',\n    fontFamily: 'Varela Round',\n    color: 'white',\n    padding: 1\n  },\n  myButton: {\n    textTransform: 'none',\n    borderRadius: 20,\n    minWidth: '50vw',\n    minHeight: '5vh',\n    margin: 2\n  }\n};\nexport default function Assesment() {\n  const navigate = useNavigate();\n\n  const handleBack = () => {\n    navigate('/main/assesment/*');\n  };\n\n  const handleNext = id => {\n    id === 'toPreTest' ? navigate('/main/assesment/pre-test/*') : navigate('/main/assesment/post-test/*');\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    sx: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    sx: classes.myCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    sx: classes.myIcon,\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    sx: {\n      fontSize: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 64\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(Card, {\n    sx: classes.myQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myLabels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Assesment\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"btnA\",\n    onClick: () => handleNext('toPreTest'),\n    sx: { ...classes.myButton,\n      background: 'radial-gradient(circle, rgba(147,92,69,1) 9%, rgba(70,14,14,1) 100%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Pre-Test\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"btnA\",\n    onClick: () => handleNext('toPostTest'),\n    sx: { ...classes.myButton,\n      background: 'radial-gradient(circle, rgba(134,168,170,1) 0%, rgba(27,55,110,1) 100%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"Post-Test\")))));\n}","map":{"version":3,"sources":["C:/Users/Em/Desktop/THe Frog v3/src/pages/Assesment.js"],"names":["React","ArrowBackIcon","Button","Card","Grid","IconButton","Typography","useNavigate","classes","container","display","flexDirection","justifyContent","alignItems","minWidth","minHeight","backgroundColor","myCard","position","padding","background","myQuestion","myLabels","fontSize","textAlign","fontFamily","color","myText","opacity","myButton","textTransform","borderRadius","margin","Assesment","navigate","handleBack","handleNext","id","myIcon"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    IconButton,\r\n    Typography,\r\n} from '@mui/material'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst classes = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minWidth: '100vw',\r\n        minHeight: '100vh',\r\n        backgroundColor: '#3f3f3f'\r\n    },\r\n    myCard: {\r\n        minWidth: '60vw',\r\n        minHeight: '60vh',\r\n        display: 'flex',\r\n        position: 'relative',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n       /* backgroundImage:`url(${images})`,\r\n        backgroundSize: 'cover',*/\r\n        padding: 3,\r\n        background: \"radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(66,181,129,1) 100%)\"\r\n    },\r\n    myQuestion: {\r\n        padding: 2,\r\n        minWidth: '50vw',\r\n        minHeight: '15vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        background: \"radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(66,181,129,1) 100%)\"\r\n    },\r\n    myLabels: {\r\n        fontSize: '2rem',\r\n        textAlign: 'center',\r\n        fontFamily: 'Varela Round',\r\n        color: 'black'\r\n    },\r\n    myText: {\r\n        fontSize: '1.2rem',\r\n        opacity: '0.8',\r\n        textAlign: 'center',\r\n        fontFamily: 'Varela Round',\r\n        color: 'white',\r\n        padding: 1\r\n    },\r\n    myButton: {\r\n        textTransform: 'none',\r\n        borderRadius: 20,\r\n        minWidth: '50vw',\r\n        minHeight: '5vh',\r\n        margin: 2,\r\n    }\r\n}\r\nexport default function Assesment() {\r\n    const navigate = useNavigate();\r\n    const handleBack = () => {\r\n        navigate('/main/assesment/*')\r\n    };\r\n    const handleNext = (id) => {\r\n        id === 'toPreTest' ? (\r\n            navigate('/main/assesment/pre-test/*')\r\n        ) : (\r\n            navigate('/main/assesment/post-test/*')\r\n        )\r\n    };\r\n\r\n    return (\r\n        <Grid container sx={classes.container}>\r\n\r\n            <Card sx={classes.myCard}>\r\n            <IconButton sx={classes.myIcon} onClick={handleBack}>\r\n                        <ArrowBackIcon sx={{ fontSize: 50 }} /><Typography>Back</Typography>\r\n                    </IconButton>\r\n                <Card sx={classes.myQuestion}>\r\n                    <Typography sx={classes.myLabels}>Assesment</Typography>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color='btnA'\r\n                        onClick={() => handleNext('toPreTest')}\r\n                        sx={{...classes.myButton,background:'radial-gradient(circle, rgba(147,92,69,1) 9%, rgba(70,14,14,1) 100%)'}}>\r\n                        <Typography sx={classes.myText}>\r\n                            Pre-Test\r\n                        </Typography>\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color='btnA'\r\n                        onClick={() => handleNext('toPostTest')}\r\n                        sx={{...classes.myButton, background:'radial-gradient(circle, rgba(134,168,170,1) 0%, rgba(27,55,110,1) 100%)'}}>\r\n                        <Typography sx={classes.myText}>\r\n                            Post-Test\r\n                        </Typography>\r\n                    </Button>\r\n                </Card>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
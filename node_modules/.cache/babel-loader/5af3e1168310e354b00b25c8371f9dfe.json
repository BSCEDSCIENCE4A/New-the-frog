{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Em\\\\Desktop\\\\New-the-frog\\\\src\\\\components\\\\ButtonComponent.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ImageButton from \"./image_button\";\nimport { toggleSystem } from \"../actions/anatomy_actions\";\nimport { anatomyConfig } from \"./anatomy_config\";\n\nclass ButtonComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accordion: \"accordion-show\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `button-parent ${this.state.accordion}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, anatomyConfig.map(btnNm => /*#__PURE__*/React.createElement(ImageButton, {\n      key: btnNm.id,\n      type: \"image-label\",\n      src: this.props[btnNm.id] ? btnNm.image : btnNm.selectedImg,\n      altText: btnNm.id,\n      selected: !this.props[btnNm.id],\n      buttonWrapperClass: \"anatomy-buttons-wrapper\",\n      onClick: () => this.props.dispatch(toggleSystem(btnNm.id)),\n      hoverImg: btnNm.hoverImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, btnNm.displayName)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-accordion\",\n      onClick: () => {\n        this.setState({\n          accordion: this.state.accordion === \"accordion-show\" ? \"accordion-hide\" : \"accordion-show\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"\\u203A\"));\n  }\n\n}\n\nButtonComponent.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  Skin: PropTypes.bool.isRequired,\n  Skeleton: PropTypes.bool.isRequired,\n  Muscles: PropTypes.bool.isRequired,\n  Nervous: PropTypes.bool.isRequired,\n  Heart: PropTypes.bool.isRequired,\n  Lungs: PropTypes.bool.isRequired,\n  Stomach: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = _ref => {\n  let {\n    anatomy\n  } = _ref;\n  return { ...anatomy\n  };\n};\n\nexport default connect(mapStateToProps)(ButtonComponent);","map":{"version":3,"sources":["C:/Users/Em/Desktop/New-the-frog/src/components/ButtonComponent.js"],"names":["React","Component","PropTypes","connect","ImageButton","toggleSystem","anatomyConfig","ButtonComponent","constructor","props","state","accordion","render","map","btnNm","id","image","selectedImg","dispatch","hoverImg","displayName","setState","propTypes","func","isRequired","Skin","bool","Skeleton","Muscles","Nervous","Heart","Lungs","Stomach","mapStateToProps","anatomy"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,SAASC,aAAT,QAA8B,kBAA9B;;AAEA,MAAMC,eAAN,SAA8BN,SAA9B,CAAwC;AACtCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAG,iBAAgB,KAAKF,KAAL,CAAWC,SAAU,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,aAAa,CAACO,GAAd,CAAkBC,KAAK,iBACtB,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,EADb;AAEE,MAAA,IAAI,EAAE,aAFR;AAGE,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAWK,KAAK,CAACC,EAAjB,IAAuBD,KAAK,CAACE,KAA7B,GAAqCF,KAAK,CAACG,WAHlD;AAIE,MAAA,OAAO,EAAEH,KAAK,CAACC,EAJjB;AAKE,MAAA,QAAQ,EAAE,CAAC,KAAKN,KAAL,CAAWK,KAAK,CAACC,EAAjB,CALb;AAME,MAAA,kBAAkB,EAAE,yBANtB;AAOE,MAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWS,QAAX,CAAoBb,YAAY,CAACS,KAAK,CAACC,EAAP,CAAhC,CAPjB;AAQE,MAAA,QAAQ,EAAED,KAAK,CAACK,QARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUGL,KAAK,CAACM,WAVT,CADD,CADH,eAeE;AACE,MAAA,SAAS,EAAE,eADb;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKC,QAAL,CAAc;AACZV,UAAAA,SAAS,EACP,KAAKD,KAAL,CAAWC,SAAX,KAAyB,gBAAzB,GACI,gBADJ,GAEI;AAJM,SAAd;AAMD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,CADF;AA+BD;;AAvCqC;;AA0CxCJ,eAAe,CAACe,SAAhB,GAA4B;AAC1BJ,EAAAA,QAAQ,EAAEhB,SAAS,CAACqB,IAAV,CAAeC,UADC;AAE1BC,EAAAA,IAAI,EAAEvB,SAAS,CAACwB,IAAV,CAAeF,UAFK;AAG1BG,EAAAA,QAAQ,EAAEzB,SAAS,CAACwB,IAAV,CAAeF,UAHC;AAI1BI,EAAAA,OAAO,EAAE1B,SAAS,CAACwB,IAAV,CAAeF,UAJE;AAK1BK,EAAAA,OAAO,EAAE3B,SAAS,CAACwB,IAAV,CAAeF,UALE;AAM1BM,EAAAA,KAAK,EAAE5B,SAAS,CAACwB,IAAV,CAAeF,UANI;AAO1BO,EAAAA,KAAK,EAAE7B,SAAS,CAACwB,IAAV,CAAeF,UAPI;AAQ1BQ,EAAAA,OAAO,EAAE9B,SAAS,CAACwB,IAAV,CAAeF;AARE,CAA5B;;AAWA,MAAMS,eAAe,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACvC,SAAO,EACL,GAAGA;AADE,GAAP;AAGD,CAJD;;AAMA,eAAe/B,OAAO,CAAC8B,eAAD,CAAP,CAAyB1B,eAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ImageButton from \"./image_button\";\r\n\r\nimport { toggleSystem } from \"../actions/anatomy_actions\";\r\n\r\nimport { anatomyConfig } from \"./anatomy_config\";\r\n\r\nclass ButtonComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accordion: \"accordion-show\"\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={`button-parent ${this.state.accordion}`}>\r\n        {anatomyConfig.map(btnNm => (\r\n          <ImageButton\r\n            key={btnNm.id}\r\n            type={\"image-label\"}\r\n            src={this.props[btnNm.id] ? btnNm.image : btnNm.selectedImg}\r\n            altText={btnNm.id}\r\n            selected={!this.props[btnNm.id]}\r\n            buttonWrapperClass={\"anatomy-buttons-wrapper\"}\r\n            onClick={() => this.props.dispatch(toggleSystem(btnNm.id))}\r\n            hoverImg={btnNm.hoverImg}\r\n          >\r\n            {btnNm.displayName}\r\n          </ImageButton>\r\n        ))}\r\n        <button\r\n          className={\"btn-accordion\"}\r\n          onClick={() => {\r\n            this.setState({\r\n              accordion:\r\n                this.state.accordion === \"accordion-show\"\r\n                  ? \"accordion-hide\"\r\n                  : \"accordion-show\"\r\n            });\r\n          }}\r\n        >\r\n          â€º\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nButtonComponent.propTypes = {\r\n  dispatch: PropTypes.func.isRequired,\r\n  Skin: PropTypes.bool.isRequired,\r\n  Skeleton: PropTypes.bool.isRequired,\r\n  Muscles: PropTypes.bool.isRequired,\r\n  Nervous: PropTypes.bool.isRequired,\r\n  Heart: PropTypes.bool.isRequired,\r\n  Lungs: PropTypes.bool.isRequired,\r\n  Stomach: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({ anatomy }) => {\r\n  return {\r\n    ...anatomy\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ButtonComponent);\r\n"]},"metadata":{},"sourceType":"module"}
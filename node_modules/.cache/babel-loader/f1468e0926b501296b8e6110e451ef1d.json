{"ast":null,"code":"import SceneManager from \"./scene_manager\";\n\nclass ThreeEntryPoint {\n  constructor(container, humanSystem, assetsLoadingTracker, organsOfFrog) {\n    const screenDimensions = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    this.assetsLoadingTracker = assetsLoadingTracker;\n    this.humanSystem = humanSystem;\n\n    try {\n      this.canvas = this.createCanvas(document, container);\n      console.log(this.canvas);\n      this.resizeCanvas = this.resizeCanvas.bind(this);\n      this.sceneManager = new SceneManager(this.canvas, screenDimensions, this.humanSystem, this.assetsLoadingTracker, organsOfFrog);\n      this.render = this.render.bind(this);\n      this.mouseMove = this.mouseMove.bind(this);\n      this.ontouchStart = this.ontouchStart.bind(this);\n      this.bindEventListeners();\n      this.render();\n    } catch (e) {\n      console.log(\"Out of Anatomy1...\");\n    }\n  }\n\n  upDateSystem(newSystem) {\n    this.sceneManager.humanSystem = { ...newSystem\n    };\n  }\n\n  createCanvas(document, container) {\n    try {\n      const canvas = document.createElement(\"canvas\");\n      canvas.setAttribute(\"id\", \"mainCanvas\");\n      container.appendChild(canvas);\n      return canvas;\n    } catch (e) {\n      console.log(\"Out of Anatomy...\");\n    }\n  }\n\n  bindEventListeners() {\n    window.addEventListener(\"resize\", this.resizeCanvas);\n    window.addEventListener(\"mousemove\", this.mouseMove);\n    window.addEventListener(\"touchstart\", this.ontouchStart);\n    this.resizeCanvas();\n  }\n\n  dispose() {\n    window.removeEventListener(\"resize\", this.resizeCanvas);\n    window.removeEventListener(\"mousemove\", this.mouseMove);\n    window.removeEventListener(\"touchstart\", this.ontouchStart);\n    this.sceneManager.dispose();\n  }\n\n  resizeCanvas() {\n    this.sceneManager.onWindowResize();\n  }\n\n  mouseMove(e) {\n    this.sceneManager.onMouseMove(e);\n  }\n\n  ontouchStart(e) {\n    this.sceneManager.onTouchStart(e);\n  }\n\n  render(time) {\n    requestAnimationFrame(this.render);\n    this.sceneManager.update();\n  }\n\n}\n\nexport default ThreeEntryPoint;","map":{"version":3,"sources":["C:/Users/Em/Desktop/New-the-frog/src/components/frog/three_entry_point.js"],"names":["SceneManager","ThreeEntryPoint","constructor","container","humanSystem","assetsLoadingTracker","organsOfFrog","screenDimensions","width","window","innerWidth","height","innerHeight","canvas","createCanvas","document","console","log","resizeCanvas","bind","sceneManager","render","mouseMove","ontouchStart","bindEventListeners","e","upDateSystem","newSystem","createElement","setAttribute","appendChild","addEventListener","dispose","removeEventListener","onWindowResize","onMouseMove","onTouchStart","time","requestAnimationFrame","update"],"mappings":"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","sourcesContent":["import SceneManager from \"./scene_manager\";\n\nclass ThreeEntryPoint {\n  constructor(container, humanSystem, assetsLoadingTracker, organsOfFrog) {\n    const screenDimensions = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    this.assetsLoadingTracker = assetsLoadingTracker;\n    this.humanSystem = humanSystem;\n\n    try {\n      this.canvas = this.createCanvas(document, container);\n      console.log(this.canvas);\n\n      this.resizeCanvas = this.resizeCanvas.bind(this);\n\n      this.sceneManager = new SceneManager(\n        this.canvas,\n        screenDimensions,\n        this.humanSystem,\n        this.assetsLoadingTracker,\n        organsOfFrog\n      );\n\n      this.render = this.render.bind(this);\n      this.mouseMove = this.mouseMove.bind(this);\n      this.ontouchStart = this.ontouchStart.bind(this);\n      this.bindEventListeners();\n      this.render();\n    } catch (e) {\n      console.log(\"Out of Anatomy1...\");\n    }\n  }\n  upDateSystem(newSystem) {\n    this.sceneManager.humanSystem = { ...newSystem };\n  }\n  createCanvas(document, container) {\n    try {\n      const canvas = document.createElement(\"canvas\");\n      canvas.setAttribute(\"id\", \"mainCanvas\");\n      container.appendChild(canvas);\n      return canvas;\n    } catch (e) {\n      console.log(\"Out of Anatomy...\");\n    }\n  }\n  bindEventListeners() {\n    window.addEventListener(\"resize\", this.resizeCanvas);\n    window.addEventListener(\"mousemove\", this.mouseMove);\n    window.addEventListener(\"touchstart\", this.ontouchStart);\n    this.resizeCanvas();\n  }\n  dispose() {\n    window.removeEventListener(\"resize\", this.resizeCanvas);\n    window.removeEventListener(\"mousemove\", this.mouseMove);\n    window.removeEventListener(\"touchstart\", this.ontouchStart);\n    this.sceneManager.dispose();\n  }\n  resizeCanvas() {\n    this.sceneManager.onWindowResize();\n  }\n\n  mouseMove(e) {\n    this.sceneManager.onMouseMove(e);\n  }\n  ontouchStart(e) {\n    this.sceneManager.onTouchStart(e);\n  }\n  render(time) {\n    requestAnimationFrame(this.render);\n    this.sceneManager.update();\n  }\n}\n\nexport default ThreeEntryPoint;\n"]},"metadata":{},"sourceType":"module"}
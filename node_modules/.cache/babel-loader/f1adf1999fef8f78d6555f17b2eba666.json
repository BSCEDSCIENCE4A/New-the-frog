{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Em\\\\Desktop\\\\New-the-frog\\\\src\\\\pages\\\\PostTest.js\";\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { Button, Card, Grid, Typography, Stepper, IconButton } from '@mui/material';\nimport questions from '../JSONFILES/questions.json';\nimport CountDown from '../utils/countdown';\nconst classes = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minWidth: '100vw',\n    minHeight: '100vh',\n    backgroundColor: '#3f3f3f'\n  },\n  myCard: {\n    minWidth: '30vw',\n    minHeight: '30vh',\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: 'radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(66,181,129,1) 100%)',\n    margin: 1\n  },\n  myQuestion: {\n    marginTop: 1,\n    minWidth: '60vw',\n    minHeight: '15vh',\n    display: 'flex',\n    position: 'left',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#837B7C'\n  },\n  myTitle: {\n    fontSize: '2rem',\n    opacity: '0.8',\n    marginRight: '25vw',\n    fontFamily: 'Varela Round',\n    color: 'white',\n    padding: 1\n  },\n  myLabels: {\n    fontSize: '1.5rem',\n    textAlign: 'center',\n    fontFamily: 'Varela Round',\n    color: 'white'\n  },\n  myText: {\n    fontSize: '1.2rem',\n    opacity: '0.8',\n    textAlign: 'center',\n    fontFamily: 'Varela Round',\n    color: 'white',\n    padding: 1\n  },\n  myButton: {\n    textTransform: 'none',\n    borderRadius: 20,\n    minWidth: '70vw',\n    minHeight: '5vh',\n    margin: 1\n  },\n  myIcon: {\n    width: '5vw',\n    minHeight: '5vh'\n  }\n};\nexport default function PostTest() {\n  const navigate = useNavigate();\n\n  const handleBack = () => {\n    navigate('/main/assesment/*');\n  };\n\n  const [activeStep, setActiveStep] = useState(0);\n  const maxSteps = questions.length;\n  const [score, setScore] = useState(0);\n\n  const handleScore = isCorrect => {\n    switch (isCorrect) {\n      case 'yes':\n        setScore(urScore => urScore + 1);\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        console.log(score);\n        break;\n\n      case 'no':\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  if (activeStep === maxSteps) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      sx: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      sx: classes.myCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      sx: classes.myIcon,\n      onClick: handleBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n      sx: {\n        fontSize: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 64\n      }\n    }, \"Back\")), /*#__PURE__*/React.createElement(Card, {\n      sx: classes.myQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      sx: classes.myLabels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, \"YOUR SCORE IS \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 73\n      }\n    }), \" \", score, \" / \", maxSteps))));\n  }\n\n  const test = questions[activeStep];\n  return /*#__PURE__*/React.createElement(Stepper, {\n    activeStep: maxSteps,\n    alternativeLabel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    sx: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    sx: classes.myTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Post-Test\")), /*#__PURE__*/React.createElement(CountDown, {\n    minutes: 45,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    sx: classes.myCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myLabels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Question #\", test.id), /*#__PURE__*/React.createElement(Card, {\n    sx: classes.myQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, test.question)), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"btnA\",\n    onClick: () => {\n      test.choice1 === test.answer ? handleScore('yes') : handleScore('no');\n    },\n    sx: classes.myButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, \"A. \", test.choice1)), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"btnB\",\n    onClick: () => {\n      test.choice2 === test.answer ? handleScore('yes') : handleScore('no');\n    },\n    sx: classes.myButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, \"B. \", test.choice2)), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"btnC\",\n    onClick: () => {\n      test.choice3 === test.answer ? handleScore('yes') : handleScore('no');\n    },\n    sx: classes.myButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }, \"C. \", test.choice3)), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"btnD\",\n    onClick: () => {\n      test.choice4 === test.answer ? handleScore('yes') : handleScore('no');\n    },\n    sx: classes.myButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"D. \", test.choice4)))));\n}","map":{"version":3,"sources":["C:/Users/Em/Desktop/New-the-frog/src/pages/PostTest.js"],"names":["React","useState","useNavigate","ArrowBackIcon","Button","Card","Grid","Typography","Stepper","IconButton","questions","CountDown","classes","container","display","flexDirection","justifyContent","alignItems","minWidth","minHeight","backgroundColor","myCard","position","background","margin","myQuestion","marginTop","myTitle","fontSize","opacity","marginRight","fontFamily","color","padding","myLabels","textAlign","myText","myButton","textTransform","borderRadius","myIcon","width","PostTest","navigate","handleBack","activeStep","setActiveStep","maxSteps","length","score","setScore","handleScore","isCorrect","urScore","prevActiveStep","console","log","test","id","question","choice1","answer","choice2","choice3","choice4"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    Stepper,\r\n    IconButton,\r\n} from '@mui/material'\r\nimport questions from '../JSONFILES/questions.json'\r\nimport CountDown from '../utils/countdown';\r\n\r\nconst classes = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minWidth: '100vw',\r\n        minHeight: '100vh',\r\n        backgroundColor: '#3f3f3f'\r\n    },\r\n    myCard: {\r\n        minWidth: '30vw',\r\n        minHeight: '30vh',\r\n        display: 'flex',\r\n        position: 'relative',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        background: 'radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(66,181,129,1) 100%)',\r\n        margin: 1\r\n    },\r\n    myQuestion: {\r\n        marginTop: 1,\r\n        minWidth: '60vw',\r\n        minHeight: '15vh',\r\n        display: 'flex',\r\n        position: 'left',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#837B7C'\r\n    },\r\n    myTitle: {\r\n        fontSize: '2rem',\r\n        opacity: '0.8',\r\n        marginRight: '25vw',\r\n        fontFamily: 'Varela Round',\r\n        color: 'white',\r\n        padding: 1\r\n    },\r\n    myLabels: {\r\n        fontSize: '1.5rem',\r\n        textAlign: 'center',\r\n        fontFamily: 'Varela Round',\r\n        color: 'white'\r\n    },\r\n    myText: {\r\n        fontSize: '1.2rem',\r\n        opacity: '0.8',\r\n        textAlign: 'center',\r\n        fontFamily: 'Varela Round',\r\n        color: 'white',\r\n        padding: 1\r\n    },\r\n    myButton: {\r\n        textTransform: 'none',\r\n        borderRadius: 20,\r\n        minWidth: '70vw',\r\n        minHeight: '5vh',\r\n        margin: 1,\r\n    },\r\n    myIcon: {\r\n        width: '5vw',\r\n        minHeight: '5vh',\r\n    }\r\n}\r\n\r\n\r\nexport default function PostTest() {\r\n    const navigate = useNavigate();\r\n    const handleBack = () => {\r\n        navigate('/main/assesment/*')\r\n    };\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const maxSteps = questions.length;\r\n    const [score, setScore] = useState(0);\r\n    const handleScore = (isCorrect) => {\r\n        switch (isCorrect) {\r\n            case 'yes':\r\n                setScore((urScore) => urScore + 1)\r\n                setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                console.log(score)\r\n                break;\r\n            case 'no':\r\n                setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    if (activeStep === maxSteps) {\r\n        return (\r\n            <Grid container sx={classes.container}>\r\n                <Card sx={classes.myCard}>\r\n                <IconButton sx={classes.myIcon} onClick={handleBack}>\r\n                        <ArrowBackIcon sx={{ fontSize: 50 }} /><Typography>Back</Typography>\r\n                    </IconButton>\r\n                    <Card sx={classes.myQuestion}>\r\n                        <Typography sx={classes.myLabels}>YOUR SCORE IS <br/> {score} / {maxSteps}</Typography>\r\n                    </Card>\r\n                </Card>\r\n            </Grid>)\r\n    }\r\n    const test = questions[activeStep];\r\n    return (\r\n        <Stepper activeStep={maxSteps} alternativeLabel>\r\n            <Grid container sx={classes.container}>\r\n                <Grid sx={classes.myTitle}>\r\n                    <Typography sx={classes.myTitle}>Post-Test</Typography>\r\n\r\n                </Grid>\r\n                <CountDown minutes={45} />\r\n                <Card sx={classes.myCard}>\r\n                    <Typography sx={classes.myLabels}>Question #{test.id}</Typography>\r\n                    <Card sx={classes.myQuestion}>\r\n                        <Typography sx={classes.myText}>{test.question}</Typography>\r\n                    </Card>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color='btnA'\r\n                        onClick={() => {\r\n                            test.choice1 === test.answer ? handleScore('yes') : handleScore('no')\r\n                        }}\r\n                        sx={classes.myButton}>\r\n                        <Typography sx={classes.myText}>\r\n                            A. {test.choice1}\r\n                        </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color='btnB'\r\n                        onClick={() => {\r\n                            test.choice2 === test.answer ? handleScore('yes') : handleScore('no')\r\n                        }}\r\n                        sx={classes.myButton}>\r\n                        <Typography sx={classes.myText}>\r\n                            B. {test.choice2}\r\n                        </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color='btnC'\r\n                        onClick={() => {\r\n                            test.choice3 === test.answer ? handleScore('yes') : handleScore('no')\r\n                        }}\r\n                        sx={classes.myButton}>\r\n                        <Typography sx={classes.myText}>\r\n                            C. {test.choice3}\r\n                        </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color='btnD'\r\n                        onClick={() => {\r\n                            test.choice4 === test.answer ? handleScore('yes') : handleScore('no')\r\n                        }}\r\n                        sx={classes.myButton}>\r\n                        <Typography sx={classes.myText}>\r\n                            D. {test.choice4}\r\n                        </Typography>\r\n                    </Button>\r\n                </Card>\r\n            </Grid>\r\n        </Stepper >\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
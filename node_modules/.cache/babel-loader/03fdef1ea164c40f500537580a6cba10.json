{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Em\\\\Desktop\\\\New-the-frog\\\\src\\\\components\\\\fullscreen_button.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport screenfull from \"screenfull\";\nimport fullscreenIconImage from \"../media/max.png\";\n\nclass FullscreenButton extends Component {\n  constructor() {\n    super();\n    this.fullscreenButton = null;\n    this.toggleFullscreen = this.toggleFullscreen.bind(this);\n  }\n\n  componentDidMount() {\n    this.fullscreenButton.addEventListener(\"click\", this.toggleFullscreen);\n  }\n\n  componentWillUnmount() {\n    this.fullscreenButton.removeEventListener(\"click\", this.toggleFullscreen);\n  }\n\n  toggleFullscreen() {\n    const el = document.getElementsByClassName(this.props.fullscreenElementClass)[0];\n\n    if (screenfull.enabled) {\n      screenfull.toggle(el);\n    }\n\n    this.timeout = setTimeout(() => {\n      this.props.fnCall();\n      clearTimeout(this.timeout);\n    }, 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"anatomy-extra\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      ref: el => {\n        this.fullscreenButton = el;\n      },\n      className: \"btn btn-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: fullscreenIconImage,\n      alt: \"fullscreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nFullscreenButton.propTypes = {\n  fullscreenElementClass: PropTypes.string.isRequired,\n  fnCall: PropTypes.func\n};\nFullscreenButton.defaultProps = {\n  fnCall: () => {}\n};\nexport default FullscreenButton;","map":{"version":3,"sources":["C:/Users/Em/Desktop/New-the-frog/src/components/fullscreen_button.js"],"names":["React","Component","PropTypes","screenfull","fullscreenIconImage","FullscreenButton","constructor","fullscreenButton","toggleFullscreen","bind","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","el","document","getElementsByClassName","props","fullscreenElementClass","enabled","toggle","timeout","setTimeout","fnCall","clearTimeout","render","propTypes","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,mBAAP,MAAgC,kBAAhC;;AAEA,MAAMC,gBAAN,SAA+BJ,SAA/B,CAAyC;AACvCK,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,gBAAL,GAAwB,IAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,gBAAL,CAAsBI,gBAAtB,CAAuC,OAAvC,EAAgD,KAAKH,gBAArD;AACD;;AACDI,EAAAA,oBAAoB,GAAG;AACrB,SAAKL,gBAAL,CAAsBM,mBAAtB,CAA0C,OAA1C,EAAmD,KAAKL,gBAAxD;AACD;;AACDA,EAAAA,gBAAgB,GAAG;AACjB,UAAMM,EAAE,GAAGC,QAAQ,CAACC,sBAAT,CACT,KAAKC,KAAL,CAAWC,sBADF,EAET,CAFS,CAAX;;AAGA,QAAIf,UAAU,CAACgB,OAAf,EAAwB;AACtBhB,MAAAA,UAAU,CAACiB,MAAX,CAAkBN,EAAlB;AACD;;AACD,SAAKO,OAAL,GAAeC,UAAU,CAAC,MAAM;AAC9B,WAAKL,KAAL,CAAWM,MAAX;AACAC,MAAAA,YAAY,CAAC,KAAKH,OAAN,CAAZ;AACD,KAHwB,EAGtB,IAHsB,CAAzB;AAID;;AACDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAEX,EAAE,IAAI;AACT,aAAKP,gBAAL,GAAwBO,EAAxB;AACD,OAHH;AAIE,MAAA,SAAS,EAAE,eAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAK,MAAA,GAAG,EAAEV,mBAAV;AAA+B,MAAA,GAAG,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF;AAYD;;AArCsC;;AAwCzCC,gBAAgB,CAACqB,SAAjB,GAA6B;AAC3BR,EAAAA,sBAAsB,EAAEhB,SAAS,CAACyB,MAAV,CAAiBC,UADd;AAE3BL,EAAAA,MAAM,EAAErB,SAAS,CAAC2B;AAFS,CAA7B;AAKAxB,gBAAgB,CAACyB,YAAjB,GAAgC;AAC9BP,EAAAA,MAAM,EAAE,MAAM,CAAE;AADc,CAAhC;AAIA,eAAelB,gBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport screenfull from \"screenfull\";\r\n\r\nimport fullscreenIconImage from \"../media/max.png\";\r\n\r\nclass FullscreenButton extends Component {\r\n  constructor() {\r\n    super();\r\n    this.fullscreenButton = null;\r\n    this.toggleFullscreen = this.toggleFullscreen.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.fullscreenButton.addEventListener(\"click\", this.toggleFullscreen);\r\n  }\r\n  componentWillUnmount() {\r\n    this.fullscreenButton.removeEventListener(\"click\", this.toggleFullscreen);\r\n  }\r\n  toggleFullscreen() {\r\n    const el = document.getElementsByClassName(\r\n      this.props.fullscreenElementClass\r\n    )[0];\r\n    if (screenfull.enabled) {\r\n      screenfull.toggle(el);\r\n    }\r\n    this.timeout = setTimeout(() => {\r\n      this.props.fnCall();\r\n      clearTimeout(this.timeout);\r\n    }, 1000);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={\"anatomy-extra\"}>\r\n        <button\r\n          ref={el => {\r\n            this.fullscreenButton = el;\r\n          }}\r\n          className={\"btn btn-image\"}\r\n        >\r\n          <img src={fullscreenIconImage} alt=\"fullscreen\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFullscreenButton.propTypes = {\r\n  fullscreenElementClass: PropTypes.string.isRequired,\r\n  fnCall: PropTypes.func\r\n};\r\n\r\nFullscreenButton.defaultProps = {\r\n  fnCall: () => {}\r\n};\r\n\r\nexport default FullscreenButton;\r\n"]},"metadata":{},"sourceType":"module"}
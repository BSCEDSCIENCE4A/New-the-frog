{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Em\\\\Desktop\\\\New-the-frog\\\\src\\\\components\\\\image_button.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n/** `import { ImageButton } from 'cdlo_components';` */\n\nconst ImageButton = _ref => {\n  let {\n    disabled,\n    altText,\n    children,\n    type,\n    src,\n    onClick,\n    selected,\n    buttonWrapperClass,\n    hoverImg\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: buttonWrapperClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: selected ? `btn btn-${type} active` : `btn btn-${type}`,\n    onClick: onClick,\n    disabled: disabled // onMouseOver={() => {\n    //   this[altText].src = hoverImg;\n    // }}\n    // onMouseOut={() => {\n    //   this[altText].src = src;\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: src // ref={el => {\n    //   this[altText] = el;\n    // }}\n    ,\n    alt: altText,\n    role: altText ? null : \"presentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), children ? /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn-image-label\",\n    htmlFor: altText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, children) : null));\n};\n\nImageButton.defaultProps = {\n  type: \"\",\n  altText: \"\",\n  disabled: false,\n  selected: false,\n  buttonWrapperClass: \"\"\n};\nImageButton.propTypes = {\n  type: PropTypes.oneOf([\"image\", \"image-label\"]),\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  hoverImg: PropTypes.string,\n  src: PropTypes.string,\n  altText: PropTypes.string,\n  disabled: PropTypes.bool,\n  selected: PropTypes.bool,\n  buttonWrapperClass: PropTypes.string\n};\nexport default ImageButton;","map":{"version":3,"sources":["C:/Users/Em/Desktop/New-the-frog/src/components/image_button.js"],"names":["React","PropTypes","ImageButton","disabled","altText","children","type","src","onClick","selected","buttonWrapperClass","hoverImg","defaultProps","propTypes","oneOf","node","func","string","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;;AACA,MAAMC,WAAW,GAAG;AAAA,MAAC;AACnBC,IAAAA,QADmB;AAEnBC,IAAAA,OAFmB;AAGnBC,IAAAA,QAHmB;AAInBC,IAAAA,IAJmB;AAKnBC,IAAAA,GALmB;AAMnBC,IAAAA,OANmB;AAOnBC,IAAAA,QAPmB;AAQnBC,IAAAA,kBARmB;AASnBC,IAAAA;AATmB,GAAD;AAAA,sBAWlB;AAAK,IAAA,SAAS,EAAED,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAED,QAAQ,GAAI,WAAUH,IAAK,SAAnB,GAA+B,WAAUA,IAAK,EADnE;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,QAAQ,EAAEL,QAHZ,CAIE;AACA;AACA;AACA;AACA;AACA;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AACE,IAAA,GAAG,EAAEI,GADP,CAEE;AACA;AACA;AAJF;AAKE,IAAA,GAAG,EAAEH,OALP;AAME,IAAA,IAAI,EAAEA,OAAO,GAAG,IAAH,GAAU,cANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAmBGC,QAAQ,gBACP;AAAO,IAAA,SAAS,EAAC,iBAAjB;AAAmC,IAAA,OAAO,EAAED,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CADO,GAIL,IAvBN,CADF,CAXkB;AAAA,CAApB;;AAwCAH,WAAW,CAACU,YAAZ,GAA2B;AACzBN,EAAAA,IAAI,EAAE,EADmB;AAEzBF,EAAAA,OAAO,EAAE,EAFgB;AAGzBD,EAAAA,QAAQ,EAAE,KAHe;AAIzBM,EAAAA,QAAQ,EAAE,KAJe;AAKzBC,EAAAA,kBAAkB,EAAE;AALK,CAA3B;AAQAR,WAAW,CAACW,SAAZ,GAAwB;AACtBP,EAAAA,IAAI,EAAEL,SAAS,CAACa,KAAV,CAAgB,CAAC,OAAD,EAAU,aAAV,CAAhB,CADgB;AAEtBT,EAAAA,QAAQ,EAAEJ,SAAS,CAACc,IAFE;AAGtBP,EAAAA,OAAO,EAAEP,SAAS,CAACe,IAHG;AAItBL,EAAAA,QAAQ,EAAEV,SAAS,CAACgB,MAJE;AAKtBV,EAAAA,GAAG,EAAEN,SAAS,CAACgB,MALO;AAMtBb,EAAAA,OAAO,EAAEH,SAAS,CAACgB,MANG;AAOtBd,EAAAA,QAAQ,EAAEF,SAAS,CAACiB,IAPE;AAQtBT,EAAAA,QAAQ,EAAER,SAAS,CAACiB,IARE;AAStBR,EAAAA,kBAAkB,EAAET,SAAS,CAACgB;AATR,CAAxB;AAYA,eAAef,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/** `import { ImageButton } from 'cdlo_components';` */\nconst ImageButton = ({\n  disabled,\n  altText,\n  children,\n  type,\n  src,\n  onClick,\n  selected,\n  buttonWrapperClass,\n  hoverImg\n}) => (\n  <div className={buttonWrapperClass}>\n    <button\n      className={selected ? `btn btn-${type} active` : `btn btn-${type}`}\n      onClick={onClick}\n      disabled={disabled}\n      // onMouseOver={() => {\n      //   this[altText].src = hoverImg;\n      // }}\n      // onMouseOut={() => {\n      //   this[altText].src = src;\n      // }}\n    >\n      <img\n        src={src}\n        // ref={el => {\n        //   this[altText] = el;\n        // }}\n        alt={altText}\n        role={altText ? null : \"presentation\"}\n      />\n      {children ? (\n        <label className=\"btn-image-label\" htmlFor={altText}>\n          {children}\n        </label>\n      ) : null}\n    </button>\n  </div>\n);\n\nImageButton.defaultProps = {\n  type: \"\",\n  altText: \"\",\n  disabled: false,\n  selected: false,\n  buttonWrapperClass: \"\"\n};\n\nImageButton.propTypes = {\n  type: PropTypes.oneOf([\"image\", \"image-label\"]),\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  hoverImg: PropTypes.string,\n  src: PropTypes.string,\n  altText: PropTypes.string,\n  disabled: PropTypes.bool,\n  selected: PropTypes.bool,\n  buttonWrapperClass: PropTypes.string\n};\n\nexport default ImageButton;\n"]},"metadata":{},"sourceType":"module"}
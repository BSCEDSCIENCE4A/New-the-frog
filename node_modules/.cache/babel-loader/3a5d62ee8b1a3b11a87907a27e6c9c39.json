{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Em\\\\Desktop\\\\THe Frog v3\\\\src\\\\component\\\\explores\\\\ANATOMICAL_TERMS.js\";\nimport React from 'react';\nimport { Grid, Typography, Card, IconButton } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nconst classes = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minWidth: '100vw',\n    minHeight: '100vh',\n    backgroundColor: '#3f3f3f'\n  },\n  myCard: {\n    maxWidth: '90vw',\n    minHeight: '100vh',\n    position: 'relative',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: 'linear-gradient(to bottom, #F7F61B, #168820)',\n    padding: 3,\n    \"@media (max-width: 600px)\": {\n      fontSize: '1.5rem',\n      padding: 1\n    }\n  },\n  myQuestion: {\n    minWidth: '30vw',\n    minHeight: '100vh',\n    display: 'flex',\n    position: 'left',\n    padding: 3,\n    flexDirection: 'column',\n    background: \"radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(66,181,129,1) 100%)\"\n  },\n  myTitle: {\n    fontSize: '1.8rem',\n    opacity: '0.8',\n    fontFamily: 'Varela Round',\n    color: 'black',\n    marginLeft: 5,\n    padding: 1,\n    \"@media (max-width: 600px)\": {\n      marginLeft: 0,\n      textAlign: 'center',\n      fontSize: '1.5rem'\n    }\n  },\n  myLabels: {\n    fontSize: '1.5rem',\n    opacity: '0.8',\n    marginLeft: 5,\n    fontWeight: 'bold',\n    fontFamily: 'Varela Round',\n    color: 'black',\n    padding: 1,\n    \"@media (max-width: 600px)\": {\n      marginLeft: 0,\n      fontSize: '1.2rem'\n    }\n  },\n  myTimeText: {\n    fontSize: '1.2rem',\n    fontFamily: 'Varela Round',\n    color: 'black',\n    \"@media (max-width: 600px)\": {\n      fontSize: '1rem'\n    }\n  },\n  myImg: {\n    display: 'flex',\n    padding: 10,\n    \"@media (max-width: 600px)\": {\n      padding: 2\n    }\n  },\n  myText: {\n    fontSize: '1.2rem',\n    paddingTop: 0,\n    paddingLeft: 10,\n    paddingBottom: 5,\n    paddingRight: 10,\n    fontFamily: 'Varela Round',\n    color: 'black',\n    \"@media (max-width: 600px)\": {\n      marginLeft: 0,\n      fontSize: '1rem',\n      paddingTop: 0,\n      paddingLeft: 2,\n      paddingBottom: 0,\n      paddingRight: 2\n    }\n  },\n  myIcon: {\n    width: '5vw',\n    minHeight: '5vh'\n  }\n};\nexport default function ANATOMICAL_TERMS() {\n  const navigate = useNavigate();\n\n  const handleBack = () => {\n    navigate('/main/explore/');\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    sx: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    sx: classes.myCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    sx: classes.myQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    sx: classes.myIcon,\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    sx: {\n      fontSize: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"F. \", /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 57\n    }\n  }, \"ANATOMICAL TERMS\")), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myLabels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"1. REGIONS\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 53\n    }\n  }, \"Anterior:\"), \" the forward moving head end in a bilaterally symmetrical animal; toward that end; opposite to posterior.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 53\n    }\n  }, \"Posterior:\"), \" the hind part or toward the hinder (tail) end; away from head; opposite to anterior.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 53\n    }\n  }, \"Proximal:\"), \" nearer or toward the central part of the body; opposite of distal.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 53\n    }\n  }, \"Distal:\"), \" away from the place of attachment; toward the periphery of extremities of the body; opposite of proximal.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 53\n    }\n  }, \"Lateral:\"), \" on or toward the side; contrasted with medial.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 53\n    }\n  }, \"Medial (median):\"), \" on or near or toward the middle of the body; contrasted with lateral.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 53\n    }\n  }, \"Ventral:\"), \" toward or pertaining to the lower side or belly; away from the back; opposite to dorsal.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 53\n    }\n  }, \"Dorsal:\"), \" toward or pertaining to the back or upper surface; opposite of ventral.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 53\n    }\n  }, \"Cephalic:\"), \" pertaining to or toward the head; opposite of caudal.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 53\n    }\n  }, \"Caudal:\"), \" pertaining to or toward the tail or posterior part of the body; opposite of cephalic.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myLabels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"2. AXES\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 53\n    }\n  }, \"Main and Longitudinal Axes:\"), \" a hypothetical line extending the length of the anterior to the posterior end; or from the oral (mouth) surface to the aboral (opposite) surface in radially symmetrical animals. \"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 53\n    }\n  }, \"Dorso-Ventral Axis:\"), \" from the back or dorsal surface to the under or ventral surface and at right angle to the longitudinal axis. \"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 53\n    }\n  }, \"Transverse Axis:\"), \" from side to side at right angle to the longitudinal and dorso-ventral axes.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myLabels,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"3. PLANES\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 53\n    }\n  }, \"Median or Sagittal Plane:\"), \" divides the body into symmetrical right and left halves; includes the longitudinal axis and any dorso-ventral axis; any plane parallel to the sagittal is a parasagittal plane.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 53\n    }\n  }, \"Transverse Plane:\"), \" any plane at right angle to a longitudinal axis; hence, at right angles to sagittal and frontal planes; a cross-section.\"), /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 53\n    }\n  }, \"Frontal Plane:\"), \" any plane including a longitudinal and a transverse axis; hence, parallel to the front of the body (in man), or ventral surface (any bilateral animal); at the right angle to sagittal plane.\"))));\n}","map":{"version":3,"sources":["C:/Users/Em/Desktop/THe Frog v3/src/component/explores/ANATOMICAL_TERMS.js"],"names":["React","Grid","Typography","Card","IconButton","useNavigate","ArrowBackIcon","classes","container","display","flexDirection","justifyContent","alignItems","minWidth","minHeight","backgroundColor","myCard","maxWidth","position","background","padding","fontSize","myQuestion","myTitle","opacity","fontFamily","color","marginLeft","textAlign","myLabels","fontWeight","myTimeText","myImg","myText","paddingTop","paddingLeft","paddingBottom","paddingRight","myIcon","width","ANATOMICAL_TERMS","navigate","handleBack"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Card,\r\n    IconButton\r\n} from '@mui/material'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\r\n\r\nconst classes = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minWidth: '100vw',\r\n        minHeight: '100vh',\r\n        backgroundColor: '#3f3f3f'\r\n    },\r\n    myCard: {\r\n        maxWidth: '90vw',\r\n        minHeight: '100vh',\r\n        position: 'relative',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        background: 'linear-gradient(to bottom, #F7F61B, #168820)',\r\n        padding: 3,\r\n        \"@media (max-width: 600px)\": {\r\n            fontSize: '1.5rem',\r\n            padding: 1\r\n        },\r\n    },\r\n    myQuestion: {\r\n        minWidth: '30vw',\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        position: 'left',\r\n        padding: 3,\r\n        flexDirection: 'column',\r\n        background: \"radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(66,181,129,1) 100%)\"\r\n    },\r\n    myTitle: {\r\n        fontSize: '1.8rem',\r\n        opacity: '0.8',\r\n        fontFamily: 'Varela Round',\r\n        color: 'black',\r\n        marginLeft: 5,\r\n        padding: 1,\r\n        \"@media (max-width: 600px)\": {\r\n            marginLeft: 0,\r\n            textAlign: 'center',\r\n            fontSize: '1.5rem',\r\n        },\r\n    },\r\n\r\n    myLabels: {\r\n        fontSize: '1.5rem',\r\n        opacity: '0.8',\r\n        marginLeft: 5,\r\n        fontWeight: 'bold',\r\n        fontFamily: 'Varela Round',\r\n        color: 'black',\r\n        padding: 1,\r\n        \"@media (max-width: 600px)\": {\r\n            marginLeft: 0,\r\n            fontSize: '1.2rem',\r\n        },\r\n    },\r\n    myTimeText: {\r\n        fontSize: '1.2rem',\r\n        fontFamily: 'Varela Round',\r\n        color: 'black',\r\n        \"@media (max-width: 600px)\": {\r\n            fontSize: '1rem'\r\n        },\r\n    },\r\n    myImg: {\r\n        display: 'flex',\r\n        padding: 10,\r\n        \"@media (max-width: 600px)\": {\r\n            padding: 2,\r\n        },\r\n    },\r\n    myText: {\r\n        fontSize: '1.2rem',\r\n        paddingTop: 0,\r\n        paddingLeft: 10,\r\n        paddingBottom: 5,\r\n        paddingRight: 10,\r\n        fontFamily: 'Varela Round',\r\n        color: 'black',\r\n        \"@media (max-width: 600px)\": {\r\n            marginLeft: 0,\r\n            fontSize: '1rem',\r\n            paddingTop: 0,\r\n            paddingLeft: 2,\r\n            paddingBottom: 0,\r\n            paddingRight: 2,\r\n        },\r\n    },\r\n    myIcon: {\r\n        width: '5vw',\r\n        minHeight: '5vh',\r\n    }\r\n}\r\n\r\n\r\nexport default function ANATOMICAL_TERMS() {\r\n    const navigate = useNavigate();\r\n    const handleBack = () => {\r\n        navigate('/main/explore/')\r\n    };\r\n    return (\r\n        <Grid sx={classes.container} >\r\n            <Card sx={classes.myCard}><b></b>\r\n                <Card sx={classes.myQuestion}>\r\n                    <IconButton sx={classes.myIcon} onClick={handleBack}>\r\n                        <ArrowBackIcon sx={{ fontSize: 50 }} />\r\n                    </IconButton>\r\n                    <Typography sx={classes.myTitle}>F. <u>ANATOMICAL TERMS</u></Typography>\r\n                    <Typography sx={classes.myLabels}>1. REGIONS</Typography>\r\n                    <Typography sx={classes.myText}><b>Anterior:</b> the forward moving head end in a bilaterally symmetrical animal; toward that end; opposite to posterior.</Typography>\r\n                    <Typography sx={classes.myText}><b>Posterior:</b> the hind part or toward the hinder (tail) end; away from head; opposite to anterior.</Typography>\r\n                    <Typography sx={classes.myText}><b>Proximal:</b> nearer or toward the central part of the body; opposite of distal.</Typography>\r\n                    <Typography sx={classes.myText}><b>Distal:</b> away from the place of attachment; toward the periphery of extremities of the body; opposite of proximal.</Typography>\r\n                    <Typography sx={classes.myText}><b>Lateral:</b> on or toward the side; contrasted with medial.</Typography>\r\n                    <Typography sx={classes.myText}><b>Medial (median):</b> on or near or toward the middle of the body; contrasted with lateral.</Typography>\r\n                    <Typography sx={classes.myText}><b>Ventral:</b> toward or pertaining to the lower side or belly; away from the back; opposite to dorsal.</Typography>\r\n                    <Typography sx={classes.myText}><b>Dorsal:</b> toward or pertaining to the back or upper surface; opposite of ventral.</Typography>\r\n                    <Typography sx={classes.myText}><b>Cephalic:</b> pertaining to or toward the head; opposite of caudal.</Typography>\r\n                    <Typography sx={classes.myText}><b>Caudal:</b> pertaining to or toward the tail or posterior part of the body; opposite of cephalic.</Typography>\r\n\r\n                    <Typography sx={classes.myLabels}>2. AXES</Typography>\r\n                    <Typography sx={classes.myText}><b>Main and Longitudinal Axes:</b> a hypothetical line extending the length of the anterior to the posterior end; or from the oral (mouth) surface to the aboral (opposite) surface in radially symmetrical animals. </Typography>\r\n                    <Typography sx={classes.myText}><b>Dorso-Ventral Axis:</b> from the back or dorsal surface to the under or ventral surface and at right angle to the longitudinal axis. </Typography>\r\n                    <Typography sx={classes.myText}><b>Transverse Axis:</b> from side to side at right angle to the longitudinal and dorso-ventral axes.</Typography>\r\n\r\n                    <Typography sx={classes.myLabels}>3. PLANES</Typography>\r\n                    <Typography sx={classes.myText}><b>Median or Sagittal Plane:</b> divides the body into symmetrical right and left halves; includes the longitudinal axis and any dorso-ventral axis; any plane parallel to the sagittal is a parasagittal plane.</Typography>\r\n                    <Typography sx={classes.myText}><b>Transverse Plane:</b> any plane at right angle to a longitudinal axis; hence, at right angles to sagittal and frontal planes; a cross-section.</Typography>\r\n                    <Typography sx={classes.myText}><b>Frontal Plane:</b> any plane including a longitudinal and a transverse axis; hence, parallel to the front of the body (in man), or ventral surface (any bilateral animal); at the right angle to sagittal plane.</Typography>\r\n\r\n                </Card>\r\n            </Card>\r\n        </Grid >\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Em\\\\Desktop\\\\New-the-frog\\\\src\\\\pages\\\\Signup.js\";\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { Grid, TextField, Typography, OutlinedInput, InputAdornment, IconButton, FormControl, InputLabel, Button, Divider, Card, Link } from '@mui/material';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nconst classes = {\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    minWidth: '100vw',\n    minHeight: '100vh',\n    backgroundColor: '#3f3f3f'\n  },\n  myCard: {\n    padding: 3,\n    margin: 2,\n    display: 'flex',\n    position: 'relative',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    // backgroundImage:`url(${images})`,\n    background: \"radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(66,181,129,1) 100%)\"\n  },\n  myTextField: {\n    width: 300,\n    margin: 1\n  },\n  myTitle: {\n    fontSize: '2rem',\n    fontFamily: 'Varela Round',\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  myText: {\n    fontSize: '1rem',\n    opacity: '0.7',\n    textAlign: 'center',\n    fontFamily: 'Varela Round',\n    color: 'black'\n  },\n  myLabels: {\n    fontSize: '1rem',\n    paddingLeft: 1,\n    textAlign: 'center',\n    fontFamily: 'Varela Round',\n    color: 'black'\n  },\n  myDivider: {\n    border: '1px solid',\n    width: 350,\n    textAlign: 'center',\n    margin: 1,\n    color: 'white'\n  }\n};\nexport default function Register() {\n  const [payload, setPayload] = useState({\n    password: '',\n    confirmPass: '',\n    showPassword: false,\n    showCPassword: false\n  });\n\n  const handleChange = prop => event => {\n    setPayload({ ...payload,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setPayload({ ...payload,\n      showPassword: !payload.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleClickShowCPassword = () => {\n    setPayload({ ...payload,\n      showCPassword: !payload.showCPassword\n    });\n  };\n\n  const handleMouseDownCPassword = event => {\n    event.preventDefault();\n  };\n\n  const signup = e => {\n    e.preventDefault();\n\n    if (!payload.email || !payload.password || !payload.confirmPass) {\n      alert(\"Please fill all the fields\");\n    } else if (payload.password !== payload.confirmPass) {\n      alert(\"Password not match\");\n    } else {\n      const auth = getAuth();\n      createUserWithEmailAndPassword(auth, payload.email, payload.password, payload.confPassword).then(userCredential => {\n        // Signed in \n        const user = userCredential.user;\n        navigate(\"/main\");\n        console.log(\"login\", user); // ...\n      }).catch(error => {\n        alert('error'); // ..\n      });\n    }\n  };\n\n  const navigate = useNavigate();\n\n  const handleNext = () => {\n    navigate(\"/signIn/*\");\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    sx: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    sx: classes.myCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: classes.myTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Divider, {\n    sx: classes.myDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    sx: { ...classes.myTextField\n    },\n    label: \"Email\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    sx: classes.myTextField,\n    variant: \"outlined\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: payload.showPassword ? 'text' : 'password',\n    value: payload.password,\n    onChange: handleChange('password'),\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }, payload.showPassword ? /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 61\n      }\n    }) : /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 81\n      }\n    }))),\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    sx: classes.myTextField,\n    variant: \"outlined\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: payload.showCPassword ? 'text' : 'password',\n    value: payload.confirmPass,\n    onChange: handleChange('confirmPass'),\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowCPassword,\n      onMouseDown: handleMouseDownCPassword,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }, payload.showCPassword ? /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 62\n      }\n    }) : /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 82\n      }\n    }))),\n    label: \"Confirm Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: signup,\n    sx: {\n      textTransform: 'none',\n      background: 'radial-gradient(circle, rgba(41,119,135,1) 0%, rgba(6,31,129,1) 100%)',\n      borderRadius: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    sx: {\n      fontFamily: 'Varela Round',\n      fontSize: '1.2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"Sign Up\")), /*#__PURE__*/React.createElement(Typography, {\n    sx: {\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Back to\", /*#__PURE__*/React.createElement(Link, {\n    onClick: handleNext,\n    sx: {\n      fontSize: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, \"Login\"))));\n}","map":{"version":3,"sources":["C:/Users/Em/Desktop/New-the-frog/src/pages/Signup.js"],"names":["React","useState","useNavigate","getAuth","createUserWithEmailAndPassword","Grid","TextField","Typography","OutlinedInput","InputAdornment","IconButton","FormControl","InputLabel","Button","Divider","Card","Link","Visibility","VisibilityOff","classes","container","justifyContent","alignItems","minWidth","minHeight","backgroundColor","myCard","padding","margin","display","position","flexDirection","background","myTextField","width","myTitle","fontSize","fontFamily","fontWeight","color","myText","opacity","textAlign","myLabels","paddingLeft","myDivider","border","Register","payload","setPayload","password","confirmPass","showPassword","showCPassword","handleChange","prop","event","target","value","handleClickShowPassword","handleMouseDownPassword","preventDefault","handleClickShowCPassword","handleMouseDownCPassword","signup","e","email","alert","auth","confPassword","then","userCredential","user","navigate","console","log","catch","error","handleNext","textTransform","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth'\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Typography,\r\n    OutlinedInput,\r\n    InputAdornment,\r\n    IconButton,\r\n    FormControl,\r\n    InputLabel,\r\n    Button,\r\n    Divider,\r\n    Card,\r\n    Link\r\n} from '@mui/material'\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nconst classes = {\r\n    container: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        minWidth: '100vw',\r\n        minHeight: '100vh',\r\n        backgroundColor: '#3f3f3f'\r\n    },\r\n    myCard: {\r\n        padding: 3,\r\n        margin: 2,\r\n        display: 'flex',\r\n        position: 'relative',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        // backgroundImage:`url(${images})`,\r\n        background: \"radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(66,181,129,1) 100%)\"\r\n    },\r\n    myTextField: {\r\n        width: 300,\r\n        margin: 1,\r\n\r\n\r\n    },\r\n    myTitle: {\r\n        fontSize: '2rem',\r\n        fontFamily: 'Varela Round',\r\n        fontWeight: 'bold',\r\n        color: 'black'\r\n    },\r\n    myText: {\r\n        fontSize: '1rem',\r\n        opacity: '0.7',\r\n        textAlign: 'center',\r\n        fontFamily: 'Varela Round',\r\n        color: 'black'\r\n    },\r\n    myLabels: {\r\n        fontSize: '1rem',\r\n        paddingLeft: 1,\r\n        textAlign: 'center',\r\n        fontFamily: 'Varela Round',\r\n        color: 'black'\r\n    },\r\n    myDivider: {\r\n        border: '1px solid',\r\n        width: 350,\r\n        textAlign: 'center',\r\n        margin: 1,\r\n        color: 'white'\r\n    }\r\n}\r\n\r\nexport default function Register() {\r\n\r\n    const [payload, setPayload] = useState({\r\n        password: '',\r\n        confirmPass: '',\r\n        showPassword: false,\r\n        showCPassword: false,\r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setPayload({ ...payload, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setPayload({\r\n            ...payload,\r\n            showPassword: !payload.showPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleClickShowCPassword = () => {\r\n        setPayload({\r\n            ...payload,\r\n            showCPassword: !payload.showCPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownCPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const signup = (e) => {\r\n        e.preventDefault();\r\n        if (!payload.email || !payload.password || !payload.confirmPass) {\r\n          alert(\"Please fill all the fields\");\r\n        } else if (payload.password !== payload.confirmPass) {\r\n          alert(\"Password not match\");\r\n        } else {\r\n            const auth = getAuth();\r\n            createUserWithEmailAndPassword(auth, payload.email, payload.password, payload.confPassword)\r\n              .then((userCredential) => {\r\n                // Signed in \r\n                const user = userCredential.user;\r\n               navigate(\"/main\");\r\n                console.log(\"login\",user)\r\n                // ...\r\n              })\r\n              .catch((error) => {\r\n                alert('error')\r\n                // ..\r\n              });\r\n        }\r\n      };\r\n    const navigate = useNavigate();\r\n    const handleNext = () => {\r\n       navigate(\"/signIn/*\") \r\n    };\r\n    return (\r\n        <Grid container sx={classes.container}>\r\n            <Card sx={classes.myCard}>\r\n                <Typography sx={classes.myTitle}>Sign Up</Typography>\r\n\r\n                <Divider sx={classes.myDivider}></Divider>\r\n                <TextField sx={{ ...classes.myTextField, }}\r\n                    label=\"Email\" color=\"secondary\" />\r\n\r\n                <FormControl sx={classes.myTextField} variant=\"outlined\" color='secondary' >\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                    <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n\r\n                        type={payload.showPassword ? 'text' : 'password'}\r\n                        value={payload.password}\r\n                        onChange={handleChange('password')}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    edge=\"end\"\r\n                                >\r\n                                    {payload.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                        label=\"Password\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl sx={classes.myTextField} variant=\"outlined\" color='secondary' >\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">Confirm Password</InputLabel>\r\n                    <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        type={payload.showCPassword ? 'text' : 'password'}\r\n                        value={payload.confirmPass}\r\n                        onChange={handleChange('confirmPass')}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowCPassword}\r\n                                    onMouseDown={handleMouseDownCPassword}\r\n                                    edge=\"end\"\r\n                                >\r\n                                    {payload.showCPassword ? <VisibilityOff /> : <Visibility />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                        label=\"Confirm Password\"\r\n                    />\r\n                </FormControl>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={signup}\r\n                    sx={{ textTransform: 'none', background: 'radial-gradient(circle, rgba(41,119,135,1) 0%, rgba(6,31,129,1) 100%)', borderRadius: 8 }}>\r\n                    <Typography sx={{ fontFamily: 'Varela Round', fontSize: '1.2rem', }}>\r\n                        Sign Up\r\n                    </Typography>\r\n                </Button>\r\n                <Typography sx={{ fontSize: 12 }}>Back to\r\n                    <Link onClick={handleNext}\r\n                        sx={{ fontSize: 12 }}>Login</Link></Typography>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}